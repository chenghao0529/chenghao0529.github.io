<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>docker基本操作</title>
      <link href="/2022/12/21/docker/"/>
      <url>/2022/12/21/docker/</url>
      
        <content type="html"><![CDATA[<h1 id="DOCKER"><a href="#DOCKER" class="headerlink" title="DOCKER"></a>DOCKER</h1><p>linux环境安装</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">下载最新的官方docker的yum源</span><br><span class="line">curl https:<span class="comment">//download.docker.com/linux/centos/docker-ce.repo -o  /etc/yum.repos.d/docker.repo</span></span><br><span class="line">可以通过yum list ｜ grep docker 查看一下最新的版本</span><br><span class="line">yum install -y docker-ce</span><br></pre></td></tr></table></figure><p>1    给镜像打标签 docker tag  镜像   xxx </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">chenghaodeMacBook-Pro:~ chenghao$ docker tag ubuntu ubuntu_test</span><br><span class="line">chenghaodeMacBook-Pro:~ chenghao$ docker images</span><br><span class="line">REPOSITORY             TAG                 IMAGE ID            CREATED             SIZE</span><br><span class="line">ubuntu                 latest              2ca708c1c9cc        3 weeks ago         64.2MB</span><br><span class="line">ubuntu_test            latest              2ca708c1c9cc        3 weeks ago   64.2MB</span><br></pre></td></tr></table></figure><p> 如果想修改TAG，则使用docker tag 镜像 xxx:xxx 的形式即可</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">chenghaodeMacBook-Pro:~ chenghao$ docker tag ubuntu ubuntu_test:test</span><br><span class="line">chenghaodeMacBook-Pro:~ chenghao$ docker images</span><br><span class="line">REPOSITORY             TAG                 IMAGE ID            CREATED             SIZE</span><br><span class="line">ubuntu                 latest              2ca708c1c9cc        3 weeks ago         64.2MB</span><br><span class="line">ubuntu_test            latest              2ca708c1c9cc        3 weeks ago         64.2MB</span><br><span class="line">ubuntu_test            test                2ca708c1c9cc        3 weeks ago         64.2MB</span><br></pre></td></tr></table></figure><hr><p>2     打包容器成为一个功能增加的新的镜像 docker commit -m “描述” -a “操作人员”   CONTAINER ID   新的镜像名 </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker commit -m &quot;centos install net-tools&quot; -a &quot;chenghao&quot; d56b7d590195  my_centos</span><br><span class="line">sha256:9b8543bb78c7e8ef3a0b00b553bb5995ac39e99995be3a5c94968c2cf79649a8</span><br></pre></td></tr></table></figure><hr><p>3     导出镜像   docker  save   -o  xx.tar   镜像 </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker save -o my_centos_test.tar centos_with_net_tools</span><br><span class="line">ls</span><br><span class="line">my_centos_test.tar</span><br></pre></td></tr></table></figure><hr><p>4     导入镜像 docker load –input tar  名称 或者 docker load &lt; xx.tar</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker load &lt; my_centos_test.tar</span><br><span class="line">1cf8055af1f2: Loading layer [==================================================&gt;]  73.73MB/73.73MB</span><br><span class="line">Loaded image: centos_with_net_tools:latest</span><br></pre></td></tr></table></figure><hr><p>5     删除容器 docker rm container_id (如果容器正在运行，加上-f) </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">docker rm -f my_centos</span><br><span class="line">my_centos</span><br><span class="line">docker  export  container_id  &gt; file.tar  // 导出容器，可以迁移到其他机器上，需要导入</span><br><span class="line">cat file.tar |docker import - aming_test   //这样会生成aming_test的镜像</span><br></pre></td></tr></table></figure><hr><p>6    <strong>镜像私有仓库</strong></p><ol><li>下载registry 镜像，我们可以用它来创建本地的docker私有仓库 docker pull registry （registry 服务器）</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull registry</span><br></pre></td></tr></table></figure><ol start="2"><li> 启动容器，映射端口到宿主机  （registry 服务器）</li></ol><p>   -p会把容器的端口映射到宿主机上，:左边为宿主机监听端口，:右边为容器监听端口 </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker run -itd -p 5000:5000 --name my_registry registry</span><br><span class="line">5a49aaf4b84a3eafc7dc77b1c6c69db816aab1b43d91b4176126378398189ed8</span><br></pre></td></tr></table></figure><ol start="3"><li> 检查容器是否映射成功  （registry 服务器）</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">curl 127.0.0.1:5000/v2/_catalog</span><br><span class="line">&#123;&quot;repositories&quot;:[]&#125;</span><br></pre></td></tr></table></figure><ol start="4"><li> 标记一下tag，必须要带有私有仓库的ip:port（另一个服务器）</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">docker tag centos_with_net_tools 192.168.31.232:5000/centos</span><br><span class="line">chenghaodeMacBook-Pro:~ chenghao$ docker images</span><br><span class="line">REPOSITORY          TAG      IMAGE ID              CREATED         SIZE</span><br><span class="line">192.168.31.232:5000/centos   latest    9b8543bb78c7        3 hours ago         276MB</span><br></pre></td></tr></table></figure><ol start="5"><li>  推送镜像到私有仓库 （另一个服务器）</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker push 192.168.31.232:5000/centos</span><br><span class="line">The push refers to repository [192.168.31.232:5000/centos]</span><br><span class="line">Get https://192.168.31.232:5000/v2/: http: server gave HTTP response to HTTPS client</span><br></pre></td></tr></table></figure><p>warn：发现推送镜像失败，需要添加仓库路径后重新推送,需要https的方法才能上传，我们可以修改下daemon.json来解决, vim /etc/docker/daemon.json （docker重启后，注意重新启动registry容器）</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;registry-mirrors&quot;: [ &quot;https://registry.docker-cn.com&quot;],</span><br><span class="line">  &quot;insecure-registries&quot;: [ &quot;192.168.31.232:5000&quot;]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>重新在尝试推送一次</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">docker push 192.168.31.232:5000/centos</span><br><span class="line">The push refers to repository [192.168.31.232:5000/centos]</span><br><span class="line">1cf8055af1f2: Pushed</span><br><span class="line">877b494a9f30: Pushed</span><br><span class="line">latest: digest: sha256:33d629cba22f24ad8f43ada6b72f2b1905a3365a3341fcbd6cb7469834658d49 </span><br></pre></td></tr></table></figure><ol start="6"><li>重新检查registry 服务器，可以发现镜像已经推送成功，这样在其它主机配置相同到仓库地址就可以拉取到镜像了 </li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">curl 127.0.0.1:5000/v2/_catalog</span><br><span class="line">&#123;&quot;repositories&quot;:[&quot;centos&quot;]&#125;</span><br></pre></td></tr></table></figure><hr><p>7    <strong>数据管理</strong></p><ol><li>挂载本地的目录到容器里 -v 用来指定挂载目录 :前面的/data/为宿主机本地目录，:后面的/data/为容器里的目录，会在容器中自动创建 </li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker run -itd --name my_centos -v /usr/local/data/:/usr/local/data centos bash</span><br><span class="line">7261513862ef9a43b59725cef76b7c10df53fe002dc8dcff701b53926ba60426</span><br></pre></td></tr></table></figure><ol start="2"><li> 在宿主机新建目录，查看容器目录是否能够同步 </li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">chenghaodeMacBook-Pro:data chenghao$mkdir test</span><br><span class="line">进入容器</span><br><span class="line">[root@7261513862ef data]# ll</span><br><span class="line">drwxr-xr-x 2 root root 64 Oct 13 15:06 test</span><br></pre></td></tr></table></figure><ol start="3"><li> 挂载数据卷 新建一个容器，挂载到上面创建的my_centos容器 (注意–volumes-from 中间不能空格) </li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker run -itd --volumes-from my_centos --name=centos_test centos bash</span><br><span class="line">ad40fc78083e0e5e8a84eb20597b03145de7d6fe66e238cdad8d52dae4e9c85d</span><br></pre></td></tr></table></figure><ol start="4"><li>以后如果我们需要多个容器之间相互共享数据，类似于linux里面的NFS，我们就可以搭建一个专门的数据卷    容器，然后其他容器直接挂载该数据卷。 </li></ol><hr><p>8    <strong>DOCKERFILE构建镜像</strong></p><ol><li><p>FROM  //指定基于哪个基础镜像</p><p> FROM centos </p></li><li><p>MAINTAINER  //指定作者信息 </p><p> MAINTAINER  chenghao  </p></li><li><p>RUN  //镜像操作指令 </p><p> 格式为 RUN 或者 RUN [“executable”, “param1”, “param2”]，比如<br> RUN  yum install  httpd<br> RUN [“/bin/bash”, “-c”, “echo hello”] </p></li><li><p>CMD //用来指定容器启动时用到的命令，只能有一条<br>格式为：CMD [“executable”, “param1”, “param2”]或 CMD command param1 param2 或 CMD [“param1”, “param2”]<br>CMD [“/bin/bash”, “/usr/local/nginx/sbin/nginx”, “-c”, “/usr/local/nginx/conf/nginx.conf”] </p></li><li><p>EXPOSE //映射出去的端口<br>EXPOSE 22 80 8443 </p></li><li><p>ENV  //为后续的RUN指令提供一个环境变量<br>ENV PATH /usr/local/mysql/bin:$PATH</p></li><li><p>COPY // 复制文件。 其基本格式：<br>格式1：COPY &lt;源路径&gt;…&lt;目标路径&gt;<br>格式2：COPY [“&lt;源路径1&gt;”,…..”&lt;目标路径&gt;“] </p></li><li><p>ADD // 更高级的复制文件，在COPY的基础上增加了一些功能，如果复制的是压缩包的话，会直接解压，而不需要在使用RUN解压. 将本地的一个文件或目录拷贝到容器的某个目录里。 其中src为Dockerfile所在目录的相对路径，它也可以是一个url，会直接去下载，不需要通过RUN更加的方便。</p></li><li><p>VOLUME //创建一个可以从本地主机或其他容器挂载的挂载点<br>格式  VOLUME [“/data”] </p></li><li><p>ENTRYPOINT // 容器启动时要执行的命令，它和CMD很像，也是只有一条生效，如果写多个只有最后一条有效。和CMD不同是：CMD 是可以被 docker run 指令覆盖的，而ENTRYPOINT不能覆盖</p></li><li><p>USER //指定运行容器的用户<br>格式 USER chenghao </p></li><li><p>WORKDIR //为后续的RUN、CMD或者ENTRYPOINT指定工作目录<br>格式 WORKDIR  /path/to/workdir </p></li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#来源于哪个镜像</span></span><br><span class="line">FROM centos</span><br><span class="line"><span class="comment"># 作者信息</span></span><br><span class="line">MAINTAINER chenghao javachenghao@<span class="number">163</span>.com</span><br><span class="line"><span class="comment"># 安装相关的依赖</span></span><br><span class="line">RUN yum install -y pcre-devel wget net-tools gcc zlib zlib-devel make openssl-devel</span><br><span class="line"><span class="comment"># 下载nginx</span></span><br><span class="line">ADD http:<span class="comment">//nginx.org/download/nginx-1.18.0.tar.gz .</span></span><br><span class="line"><span class="comment"># 解压nginx</span></span><br><span class="line">RUN tar zxvf nginx-<span class="number">1.8</span>.<span class="number">0</span>.tar.gz</span><br><span class="line"><span class="comment"># 创建文件夹</span></span><br><span class="line">RUN mkdir -p /usr/local/nginx</span><br><span class="line"><span class="comment"># 编译</span></span><br><span class="line">RUN cd nginx-<span class="number">1.8</span>.<span class="number">0</span> &amp;&amp; ./configure --prefix=/usr/local/nginx &amp;&amp; make &amp;&amp; make install</span><br><span class="line"><span class="comment"># 打开端口</span></span><br><span class="line">EXPOSE <span class="number">80</span></span><br><span class="line"><span class="comment"># 容器启动后执行命令 tail 保证一直运行</span></span><br><span class="line">ENTRYPOINT /usr/local/nginx/sbin/nginx &amp;&amp; tail -f /etc/passwd</span><br></pre></td></tr></table></figure><p>创建镜像：<br>docker build -t centos_nginx  . </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Step 8/9 : EXPOSE 80</span><br><span class="line"> ---&gt; Running in d309fbba6478</span><br><span class="line">Removing intermediate container d309fbba6478</span><br><span class="line"> ---&gt; e069703b2053</span><br><span class="line">Step 9/9 : ENTRYPOINT /usr/local/nginx/sbin/nginx &amp;&amp; tail -f /etc/passwd</span><br><span class="line"> ---&gt; Running in ece236553641</span><br><span class="line">Removing intermediate container ece236553641</span><br><span class="line"> ---&gt; 483bcf6d8150</span><br><span class="line">Successfully built 483bcf6d8150</span><br><span class="line">Successfully tagged nginx:latest</span><br></pre></td></tr></table></figure><p> 启动容器，检验状态 ,发现启动成功</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">docker run -itd -p 8080:80 483bcf6d8150 bash</span><br><span class="line">871971b3df433772b452e20059f919f0a8c5a2c5d22ac3981fd33e71016405b0</span><br><span class="line">chenghaodeMacBook-Pro:Documents chenghao$ docker ps</span><br><span class="line">CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS            NAMES</span><br><span class="line">871971b3df43        483bcf6d8150        &quot;/bin/sh -c &#x27;/usr/lo…&quot;   4 seconds ago       Up 3 seconds       0.0.0.0:8080-&gt;80/tcp     serene_bartik</span><br><span class="line">chenghaodeMacBook-Pro:Documents chenghao$ curl 127.0.0.1:8080</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;title&gt;Welcome to nginx!&lt;/title&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">    body &#123;</span><br><span class="line">        width: 35em;</span><br><span class="line">        margin: 0 auto;</span><br><span class="line">        font-family: Tahoma, Verdana, Arial, sans-serif;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h1&gt;Welcome to nginx!&lt;/h1&gt;</span><br><span class="line">&lt;p&gt;If you see this page, the nginx web server is successfully installed and</span><br><span class="line">working. Further configuration is required.&lt;/p&gt;</span><br><span class="line">&lt;p&gt;For online documentation and support please refer to</span><br><span class="line">&lt;a href=&quot;http://nginx.org/&quot;&gt;nginx.org&lt;/a&gt;.&lt;br/&gt;</span><br><span class="line">Commercial support is available at</span><br><span class="line">&lt;a href=&quot;http://nginx.com/&quot;&gt;nginx.com&lt;/a&gt;.&lt;/p&gt;</span><br><span class="line">&lt;p&gt;&lt;em&gt;Thank you for using nginx.&lt;/em&gt;&lt;/p&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><hr><h2 id="docker-logs-f-容器-可以用来查看容器为啥启动不成功"><a href="#docker-logs-f-容器-可以用来查看容器为啥启动不成功" class="headerlink" title="docker logs -f  容器   可以用来查看容器为啥启动不成功"></a>docker logs -f  容器   可以用来查看容器为啥启动不成功</h2>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
